---
import { getLanguageFromURL, getVersionFromURL } from '../../util'
import type { NavItem } from '../../i18n/en/nav'
import SubNav from './SubNav.astro'
import NavItemComp from './NavItem'

export interface Props {
  sidebarSections: NavItem[]
  currentPageMatch: string
  type: string
  defaultActiveTab: string
}

const { sidebarSections, currentPageMatch } = Astro.props as Props
const lang = getLanguageFromURL(Astro.url.pathname)
const version = getVersionFromURL(Astro.url.pathname)
let urlVersion = version ? `v${version}/` : ''
const categoryLinkPrefix = `/${lang}/${urlVersion}`

const currentPageNoLangNoVer = currentPageMatch.replace(`${lang}/`, '').replace(urlVersion, '') + '/'
---

<ul>
  {sidebarSections.map((section) => section.isSectionTitle ? (
		<div class="ml-2 text-black-300 font-bold my-2">
			{section.text}
		</div>
	) :
    <NavItemComp
      item={section}
      currentPageNoLangNoVer={currentPageNoLangNoVer}
      categoryLinkPrefix={categoryLinkPrefix}
			client:only
    />
  )}
</ul>

<style lang="scss" is:global>
  .menu-item a {
    color: var(--theme-readable-grey);
    border-radius: 4px;
  }
  .menu-item .submenu {
    display: none;
    margin-left: 26px;
  }

  .menu-item a {
    display: block;
    margin: 0.3rem 0;
  }

  .menu-item .submenu a {
    margin: 0.2rem 0;
    padding: 0.3rem;
  }

  .menu-item .submenu li:hover {
    background: var(--theme-gray-opacity);
    border-radius: var(--theme-border-radius);
  }

  .menu-item.active > div {
    background-color: var(--theme-accent-opacity);
    border-radius: var(--theme-border-radius);
  }

  .menu-item.active .toggle {
    transform: rotate(90deg);
  }
  .submenu a.active {
    background-color: #eee;
    color: var(--theme-accent-full);
  }

  .menu-item.active .submenu {
    display: block;
  }

</style>
