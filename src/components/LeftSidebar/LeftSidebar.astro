---
import { removeLeadingSlash, removeTrailingSlash } from '../../util';
import { getDocSearchStrings, getNav, useTranslations } from '../../i18n/util';
import SidebarContent from './SidebarContent.astro';
import SidebarToggleTabGroup from '../TabGroup/SidebarToggleTabGroup';
import UIString from '../UIString.astro';
import ThemeToggleButton from '../Header/ThemeToggleButton';
import LanguageSelect from '../Header/LanguageSelect';
import { getLanguageFromURL } from '../../util';
import type { NavItem } from '~/i18n/translation-checkers';
import type { AstroGlobal } from 'astro';
import LSDocSearchTrigger from '../Header/LSDocSearchTrigger';

export interface Props {
  currentPage: string;
}

type MenuItem = {
  text: string;
  slug: string;
  icon: string;
}

function getExtraNav(astro: AstroGlobal): MenuItem[] {
  const lang = getLanguageFromURL(astro.url.pathname) || "en";
  const mod: Record<string, any> = import.meta.glob('../../i18n/**/*.ts', {eager: true});

  const menuItems: MenuItem[] = [];
  for(let k in mod) {
    if((k.indexOf(`/${lang}/`) !== -1) && (k.indexOf('nav.ts') !== -1)) {
      const subMenus = Array.isArray(mod[k].subMenus) ? mod[k].subMenus : [];
      subMenus.forEach((m: MenuItem) => {
        menuItems.push(m);
      });
    }
  }
  return menuItems;
}

const t = useTranslations(Astro);

const { currentPage } = Astro.props as Props;
const currentPageMatch = removeLeadingSlash(removeTrailingSlash(currentPage));

// Group nav menu by sections to properly render.
function createMenuSections(elems: NavItem[]) {
  return elems.reduce((collection: any[], item: NavItem) => {
    if ('header' in item) {
      collection.push({ ...item, children: [] });
    } else {
      if (collection.length > 0) {
        collection[collection.length - 1].children.push(item);
      }
    }
    return collection;
  }, [] as Parameters<typeof SidebarContent>[0]['sidebarSections']);
}

// Get navigation items
const navResult = await getNav(Astro);
const sidebarSections = navResult?.children || [];
const subMenusSections = createMenuSections(getExtraNav(Astro));

// Determine active tab
let activeTab: 'learn' | 'api' = 'learn';
if (sidebarSections) {
  for (const section of sidebarSections) {
    if (section.children && section.children.some((item) =>
      item.slug && currentPageMatch.includes(item.slug))) {
      if ('type' in section && (section.type === 'learn' || section.type === 'api')) {
        activeTab = section.type;
      }
    }
  }
}

const lang = currentPage ? getLanguageFromURL(currentPage) : undefined;
---

<div class="block sidenav-search py-2 lg:pt-0 px-2 pe-4 lg:px-0 sticky top-0 z-10">
  <LSDocSearchTrigger client:load  />
</div>

<nav aria-label={t('leftSidebar.a11yTitle')} class="mt-5 px-4 h-full">
  <SidebarToggleTabGroup
    client:load
    defaultActiveTab={activeTab}
    labels={{
      learn: t('leftSidebar.learnTab') || 'Learn',
      api: t('leftSidebar.referenceTab') || 'Reference'
    }}
  />
  <ul class={`nav-groups left-nav-parent`}>
    <SidebarContent
      type={'learn'}
      defaultActiveTab={activeTab}
      sidebarSections={sidebarSections}
      currentPageMatch={currentPageMatch}
    />
    <li>
      <div class="py-5 xl:hidden border-t">
        <div class="flex flex-col gap-1">
          <div class="nav-link">
            <a class="flex gap-2 no-underline text-neutral-500" href="https://slack.openreplay.com" target="_blank">
              <svg xmlns="http://www.w3.org/2000/svg" width="13" height="13" fill="currentColor" class="bi bi-slack" viewBox="0 0 16 16">
                <path d="M3.362 10.11c0 .926-.756 1.681-1.681 1.681S0 11.036 0 10.111C0 9.186.756 8.43 1.68 8.43h1.682v1.68zm.846 0c0-.924.756-1.68 1.681-1.68s1.681.756 1.681 1.68v4.21c0 .924-.756 1.68-1.68 1.68a1.685 1.685 0 0 1-1.682-1.68v-4.21zM5.89 3.362c-.926 0-1.682-.756-1.682-1.681S4.964 0 5.89 0s1.68.756 1.68 1.68v1.682H5.89zm0 .846c.924 0 1.68.756 1.68 1.681S6.814 7.57 5.89 7.57H1.68C.757 7.57 0 6.814 0 5.89c0-.926.756-1.682 1.68-1.682h4.21zm6.749 1.682c0-.926.755-1.682 1.68-1.682.925 0 1.681.756 1.681 1.681s-.756 1.681-1.68 1.681h-1.681V5.89zm-.848 0c0 .924-.755 1.68-1.68 1.68A1.685 1.685 0 0 1 8.43 5.89V1.68C8.43.757 9.186 0 10.11 0c.926 0 1.681.756 1.681 1.68v4.21zm-1.681 6.748c.926 0 1.682.756 1.682 1.681S11.036 16 10.11 16s-1.681-.756-1.681-1.68v-1.682h1.68zm0-.847c-.924 0-1.68-.755-1.68-1.68 0-.925.756-1.681 1.68-1.681h4.21c.924 0 1.68.756 1.68 1.68 0 .926-.756 1.681-1.68 1.681h-4.21z"/>
              </svg>
              <span><UIString key="rightSidebar.joinSlack" /></span>
            </a>
          </div>
          <div class="nav-link">
            <a class="flex gap-2 no-underline text-neutral-500" href="https://blog.openreplay.com" target="_blank">
              <svg xmlns="http://www.w3.org/2000/svg" width="13" height="13" fill="currentColor" class="bi bi-chat-right-text" viewBox="0 0 16 16">
                <path d="M2 1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h9.586a2 2 0 0 1 1.414.586l2 2V2a1 1 0 0 0-1-1H2zm12-1a2 2 0 0 1 2 2v12.793a.5.5 0 0 1-.854.353l-2.853-2.853a1 1 0 0 0-.707-.293H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h12z"/>
                <path d="M3 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3 6a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 6zm0 2.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z"/>
              </svg>
              <span><UIString key="rightSidebar.readBlog" /></span>
            </a>
          </div>

          <div class="nav-link pb-5">
            <a class="flex gap-2 no-underline text-neutral-500" href="https://github.com/openreplay/openreplay" target="_blank">
              <svg aria-hidden="true" focusable="false" data-prefix="fas"
                data-icon="github" class="svg-inline--fa fa-brands fa-github fa-w-16"
                role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 496 512"
                width="13" height="13" fill="currentColor">
                <path fill="inherit" d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z">
                </path>
              </svg>
              <span><UIString key="rightSidebar.github" /></span>
            </a>
          </div>
        </div>
        <div class="items flex pt-5 border-t pb-3 gap-4 items-center">
          <ThemeToggleButton
            client:visible
            labels={{
              useLight: t('themeToggle.useLight') || 'Use Light Theme',
              useDark: t('themeToggle.useDark') || 'Use Dark Theme'
            }}
            isInsideHeader={false}
          />

          <div class="flex nav-link xl:hidden justify-end gap-1">
            <div dir="ltr" lang="en">
              {lang && <LanguageSelect lang={lang} client:idle />}
            </div>
          </div>
        </div>
      </div>
    </li>
  </ul>
</nav>

<script>
  window.addEventListener('DOMContentLoaded', () => {
    var target = document.querySelector('[data-current-parent="true"]');
    target?.scrollIntoView({ block: 'center' });
  });
</script>
